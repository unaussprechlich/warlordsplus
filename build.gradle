// For those who want the bleeding edge
buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'

version = project_version
group= "net.unaussprechlich.warlordsplus" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "$archive_name-$mc_version"

minecraft {
    version = "$mc_version-$forge_version-$mc_version"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')

    embed "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    embed "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    embed "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"
    embed ('org.slick2d:slick2d-core:1.0.2') {
        exclude module: 'lwjgl'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.WARN
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }


    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"

    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
    copy {
        from("src/main/resources")
        into("build/classes/java/main")
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
    jcenter()
}

idea { module { inheritOutputDirs = true; } }